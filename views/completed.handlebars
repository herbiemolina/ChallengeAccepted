<div class="container">

    <!-- Blog Entry Modal -->
    <div class="modal fade" id="BlogModal" tabindex="-1" role="dialog" aria-labelledby="BlogModal title"
        aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modal-card-title">Modal title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div id="blog-text" class="modal-body">
                    ...
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- RBPM Modal -->
    <div class="modal fade" id="RBPMModal" tabindex="-1" role="dialog" aria-labelledby="RBPMModal title"
        aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modal-card-title">Resting Beats Per Minute</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div id="blog-text" class="modal-body">
                    <canvas id="RBPMChartLarge" width="400" height="400"></canvas>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- BMI Modal -->
    <div class="modal fade" id="BMIModal" tabindex="-1" role="dialog" aria-labelledby="BMIModal title"
        aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modal-card-title">Body Mass Index</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div id="blog-text" class="modal-body">
                    <canvas id="BMIChartLarge" width="400" height="400"></canvas>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>


    <div id="chartRow" class="row">
        <div class="col-6">
            <div id="RBPMChartCard" class="card mt-4" data-toggle="modal" data-target="#RBPMModal">
                <div class="card-body">
                    <h5 class="card-title">Resting Beats Per Minute</h5>
                    <canvas id="RBPMChart" width="400" height="400"></canvas>
                </div>
            </div>
        </div>

        <div class="col-6">
            <div class="card mt-4" data-toggle="modal" data-target="#BMIModal">
                <div class="card-body">
                    <h5 class="card-title">Body Mass Index</h5>
                    <canvas id="BMIChart" width="400" height="400"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div id="blogAll" class="row">
        <div class="col-12">
            <div class="card mt-4">
                <div id="Blog" class="card-body">
                    <h5 class="card-title">Blog/Mood</h5>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {

        var metricsData = null;

        // Plot the RBPM chart.
        function plotRBPM(ctx, day_id, rbpm) {

            // Generate upper and lower healthy RBPM limit.
            let upperLimit = [];
            let lowerLimit = [];
            let x_data = [];
            let y_data = [];
            let j = 0;

            // Be sure to mark any skipped days.
            for (let i = 1; i <= 30; i++) {
                upperLimit.push(100);
                lowerLimit.push(60);
                x_data.push(i);

                if (day_id.indexOf(i) > -1) {
                    y_data.push(rbpm[j++]);
                }
                else {
                    // Put a null to indicate a gap in the data.
                    y_data.push(null);
                }
            }

            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: x_data,
                    datasets: [{
                        label: "Upper Normal Limit",
                        type: "line",
                        borderColor: "#c45850",
                        data: upperLimit,
                        fill: false
                    }, {
                        label: "Lower Normal Limit",
                        type: "line",
                        borderColor: "#3cba9f",
                        data: lowerLimit,
                        fill: false
                    }, {
                        label: "Your Data",
                        type: "bar",
                        backgroundColor: "#3e95cd",
                        data: y_data,
                    }
                    ]
                },
                options: {
                    title: {
                        display: true,
                        text: 'Resting Beats Per Minute'
                    },
                    scales: {
                        yAxes: [{
                            display: true,
                            ticks: {
                                beginAtZero: false
                            }
                        }]
                    }
                }
            });

        }

        // Plot the BMI chart.
        function plotBMI(ctx, day_id, bmi) {

            // Generate upper and lower healthy BMI limit.
            let healthyUpperLimit = [];
            let healthyLowerLimit = [];
            let x_data = [];
            let y_data = [];
            let j = 0;

            // Be sure to mark any skipped days.
            for (let i = 1; i <= 30; i++) {
                healthyUpperLimit.push(25);
                healthyLowerLimit.push(18.5);
                x_data.push(i);

                if (day_id.indexOf(i) > -1) {
                    y_data.push(bmi[j++]);
                }
                else {
                    // Put a null to indicate a gap in the data.
                    y_data.push(null);
                }
            }

            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: x_data,
                    datasets: [{
                        label: "Upper Normal Limit",
                        type: "line",
                        borderColor: "#c45850",
                        data: healthyUpperLimit,
                        fill: false
                    }, {
                        label: "Lower Normal Limit",
                        type: "line",
                        borderColor: "#3cba9f",
                        data: healthyLowerLimit,
                        fill: false
                    }, {
                        label: "Your Data",
                        type: "bar",
                        backgroundColor: "#3e95cd",
                        data: y_data,
                    }
                    ]
                },
                options: {
                    title: {
                        display: true,
                        text: 'Body Mass Index'
                    },
                    scales: {
                        yAxes: [{
                            display: true,
                            ticks: {
                                beginAtZero: false
                            }
                        }]
                    }
                }
            });

        }

        function displayBlog(day_id, mood, blog) {
            console.log(day_id);
            console.log(mood);
            console.log(blog);

            for (let i = 1; i <= 30; i++) {
                var newBtn = $("<button>");
                var btnId = "" + i;
                newBtn.attr("id", i);
                newBtn.attr("type", "button");
                // Code button according to mood.
                let day_idx = day_id.indexOf(i);
                if (day_idx != -1) {
                    newBtn.prop("disabled", false);
                    let myMood = mood[day_idx];
                    switch (myMood) {
                        case 0:
                            newBtn.addClass("btn btn-primary btn-sm blog-button");
                            break;

                        case 1:
                            newBtn.addClass("btn btn-success btn-sm blog-button");
                            break;

                        case 2:
                            newBtn.addClass("btn btn-warning btn-sm blog-button");
                            break;

                        case 3:
                            newBtn.addClass("btn btn-danger btn-sm blog-button");
                            break;

                        default:
                            newBtn.addClass("btn btn-secondary btn-sm blog-button");
                            newBtn.prop("disabled", true);
                            break
                    }
                }
                else {
                    newBtn.addClass("btn btn-secondary btn-sm blog-button");
                    newBtn.prop("disabled", true);
                }
                newBtn.text("Day " + i);
                newBtn.attr("data-toggle", "modal");
                newBtn.attr("data-target", "#BlogModal");

                $("#Blog").append(newBtn);
            }

            // This function handles events where a topic button is clicked
            $(".blog-button").on("click", function () {
                let button_day_id = parseInt($(this).attr("id"));
                console.log("blog button clicked : " + button_day_id);

                console.log(metricsData.day_id);
                console.log("=============");

                let day_idx = metricsData.day_id.indexOf(button_day_id);
                console.log(day_idx);

                // Write information to the modal.
                $("#modal-card-title").text("Day " + button_day_id);
                let blog_text_str = "No Entry";
                if (day_idx != -1) {
                    let my_blog = metricsData.blog[day_idx];
                    console.log(my_blog);
                    let my_mood = parseInt(metricsData.mood[day_idx]);
                    switch (my_mood) {
                        case 0:
                            my_mood_str = "<i class=\"far fa-frown\"></i>";
                            break;
                        case 1:
                            my_mood_str = "<i class=\"far fa-smile\"></i>";
                            break;
                        case 2:
                            my_mood_str = "<i class=\"far fa-dizzy\"></i>";
                            break;
                        case 3:
                            my_mood_str = "<i class=\"far fa-angry\"></i>";
                            break;
                    }

                    blog_text_str = "<h4>" + my_blog + " " + my_mood_str + "</h4>";
                }
                $("#blog-text").html(blog_text_str);

            });
        }

        // AJAX post the data to the API.
        function plot() {
            $.get("/api/metrics", function (data) {

                console.log(data);
                metricsData = data; // Assign to a global to get the blog button callback to see it.

                // Plot small charts.
                var bmi_small_chart = document.getElementById('BMIChart');
                plotBMI(bmi_small_chart, data.day_id, data.bmi);
                var rbpm_small_chart = document.getElementById('RBPMChart');
                plotRBPM(rbpm_small_chart, data.day_id, data.rbpm);

                // Plot large charts.
                var rbpm_large_chart = document.getElementById('RBPMChartLarge');
                plotRBPM(rbpm_large_chart, data.day_id, data.rbpm);
                var bmi_large_chart = document.getElementById('BMIChartLarge');
                plotBMI(bmi_large_chart, data.day_id, data.bmi);

                // Display the blog buttons.
                displayBlog(data.day_id, data.mood, data.blog);

            });
        };

        // Plot data.
        plot();
    })


</script>